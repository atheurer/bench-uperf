#!/bin/bash
exec >uperf-client-stderrout.txt
exec 2>&1

echo "args: $@"
if [ -z "$RS_CS_LABEL" ]; then
    echo "RS_CS_LABEL is not defined, exiting"
    exit 1
else
    echo "RS_CS_LABEL: $RS_CS_LABEL"
fi
echo "hostname: `hostname`"
# defaults
nthreads=1
protocol=tcp
wsize=1024
rsize=1024
duration=60
remotehost=""
test_type=stream

longopts="test-type:,protocol:,wsize:,nthreads:,remotehost:,duration:"
opts=$(getopt -q -o "" --longoptions "$longopts" -n "getopt.sh" -- "$@");
if [ $? -ne 0 ]; then
    printf -- "\tUnrecognized option specified\n\n"
    exit 1
fi
eval set -- "$opts";
while true; do
    case "$1" in
        --test-type)
            shift;
            test_type=$test_type
            echo "test_type=$test_type"
            if [ ! -e /tmp/xml-files/$test_type.xml ]; then
                echo "ERROR: could not find /tmp/xml-files/$test_type.xml"
                exit 1
            fi
            shift;
            ;;
        --nthreads)
            shift;
            nthreads=$1
            echo "nthreads=$nthreads"
            shift;
            ;;
        --protocol)
            shift;
            protocol=$1
            echo "protocol=$protocol"
            shift
            ;;
        --wsize)
            shift;
            wsize=$1
            echo "wsize=$wsize"
            shift
            ;;
        --remotehost)
            shift;
            remotehost=$1
            echo "remotehost=$remotehost"
            shift
            ;;
        --duration)
            shift;
            duration=$1
            echo "duration=$duration"
            shift
            ;;
        --)
            shift;
            break
            ;;
        *)
            echo "Invalid optioni: $1"
            exit 1
    esac
done

if [ -z "$remotehost" ]; then
    echo "rmotehost is not set"
    exit 1
fi

test_xml="/tmp/xml-files/$test_type.xml"
if [ ! -e $test_xml ]; then
    echo "$test_xml not found"
    exit 1
fi

id=`echo $RS_CS_LABEL | awk -F- '{print $2}'`
re='^[1-9][0-9]*$'
if [[ ! "$id" =~ $re ]]; then
    echo "ID must a be a positive interger, exiting"
    exit 1
fi

let "port = 5 * $id"
let "port = $port + 20000"
nthreads=$nthreads protocol=$protocol remotehost=$remotehost duration=$duration \
    wsize=$wsize uperf -m /tmp/xml-files/$test_type.xml -P $port
